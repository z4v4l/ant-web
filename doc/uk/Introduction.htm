<!DOCTYPE html>

<!-- 1:47 07.07.2020 -->

<html id="up">
	<head>
		<title>Знайомство з ANT</title>
		<base href="../.." />
		<meta charset="utf-8">
		<meta	name="keywords"
				content="Upptech, ANT, efify, Операційна Система, osdev,
						Windows, Windows NT, UEFI, системне програмування,
						x86, ARM, MIPS, RISCV, ПК, одноплатний компутер"
		/>
		<meta	name="description"
				content="ANT, Операційна Система, натхненна лінійкою Microsoft Windows NT"
		/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta property="og:title" content="Avril Operating System"  />
		<meta property="og:image" content="https://ant-upptech.sourceforge.io/res/AvOgImg.jpg" />
		<link rel="shortcut icon" type="image/x-icon" href="res/EyeOfHor.jpg" />
		<link rel="icon" sizes="128x128" href="res/EyeOfHor.jpg">
		<link rel="stylesheet" href="css/IntroductionCommon.css" />
		<style type="text/css">
/* styling, specific to the page */
	/*body{font-family: Sylfaen, Georgia, Serif;}
	.navbar{font-family: Serif;}*/

/* flexbox height for navigation buttons must be the same as the image height */
/* AvIntro320.jpg is 320px in height. btnh must be l.t. imgh / nobuttons */
@media only screen and (min-width: 1301px){.div-navbtn-fb{height: 320px;}.nav-buttons{height: 74px;}}
		</style>
	</head>
	<body class="bodyintro">
		<span class="navbar"><a href="doc/Introduction.htm" class="navlink">English</a></span>
		<!--hr class="hrintro" /-->
		<h1 class="h1intro">Знайомство з ANT</h1>
		<small>Дата: 01.10.2023</small>
		<hr class="hrintro" />
		<div class="navbar">
			<a href="doc/uk/AntMain.htm" class="navlink">головна</a> \
			<a href="doc/uk/Book.htm" class="navlink">книжка</a> \
		</div>
		<hr class="hrintro" />

<div class="div-navroot-fb">
<div class="div-navbtn-fb">
	<button class="nav-buttons btn-allowed" onclick='window.location.href = "doc/uk/Targets.htm"'>
		Цільові платформи</button>
	<button class="nav-buttons btn-allowed" onclick='window.location.href = "doc/uk/Name.htm"'>
		Імена</button>
	<button class="nav-buttons btn-allowed" onclick='window.location.href = "doc/uk/Goals.htm"'>
		Наміри ANT</button>
	<button class="nav-buttons btn-allowed" onclick='window.location.href = "doc/uk/Organization.htm"'>
		Організація системи</button>
</div>
<img alt="Eye Of Horus" src="res/AvIntro320.jpg" />
</div>
<hr class="hrintro" />

<div  class="padded-page-text">
<p>
ANT &mdash; це Операційна Система (далі ОС), яку я пишу як особистий проєкт,
з цікавости, як справу для душі.
Вона натхненна сімейством ОС Microsoft Windows NT, але
не є її клоном, шо строго слідує оригіналу, не кажучи вже за бінарну сумісність &mdash;
це було б просто нездійсненно для проєкту однієї особи, та це й не зовсім те, шо
прагнеться.
Як сказано вище, це творчий проєкт і бажання відтворити NT і WinAPI було результатом
(або виявом) вподобання цієї ОС та її API, а не бажанням "змагатися", "боротися",
"замінити" чи шось подібне, шо йде з словника тих, хто баче в розробці ПЗ "ідеологію
і політику" (або, скоріше, &mdash; релігію).
</p>

<p>
ANT &mdash; це модулярне ядро, з модулями (драйверами) для управління периферійними пристроями
або надавання розширеної функціональности або абстраґування і вони (зазвичай) бігатимуть в режимі ядра.
Виконувані образи суть в форматі Portable Executable (PE), для обох режимів &mdash; ядра й користувача.
Цей формат мені подобається на відміну від ELF, підтримка якого покишо розглядається як план, для
архітектур, на яких нема компіляторів, шо можуть ґенерувати PE образи (а точніше, &mdash;
генератори коду яких не розуміють __declspec(dllimport)).
</p>

<p>
Вона є многокористувацькою ОС загального призначення для настільних, подібних до
настільних, серверних, мобільних та, можливо, інших сценаріїв.
Многопотокова, з преемптивною (виштовхувальною) диспетчеризацією потоків.
Має підтримувати Симетричну та Гетерогенну Многопроцесорність (загільновідомі абревіатури
&mdash; SMP та HMP відповідно).
</p>

<p>
Конфігурація компонентів ОС і програм зберігається в <i>Реєстрі</i>, ієрархічній базі даних, схожій на
ієрархічну файлову систему (ФС), але такій, шо дає <i>змінним</i> (аналогам файлів) типізовані клітини як
одиниці постійного сховища, тоді як для файлових систем, файл &mdash; це завжди нетипізований контейнер.
Тобто в реєстрі, надодачу до <i>ключів</i>, аналогів директорій, і змінних,
останні мають тип, шо значить, шо їхні величини можуть бути лише з множини, яку цей тип визначає.
Ця тонка структура, разом з відповідним програмним інтерфейсом для її доступу, дає ОС та програмам уніфікований
та зручний механізм для зберігання своїх конфігураційних даних. Надодачу, двигун реєстру, Конфігураційний
Менеджер, забезпечує журналювання цих даних, шо ґарантує їхню цілісність
і захищеність від ушкоджень, спричинених неконтрольованим (абруптивним) перериванням операцій на реєстрі.
</p>

<p>
Фізично реєстр складається з реєстрових "вуликів" (англ. "hives") &mdash; файлів,
які містять різні гілки (піддерева) реєстру. Подається ж реєстр як одне
монолітне дерево, дерево реєстру, зібране з цих гілок.
Тобто, продовжуючи аналогію з ФС, вулики &mdash; це аналоги томів (дисків),
а дерево реєстру виступає як аналог єдиного дерева ФС на системах, які наслідують
такий стиль подавання файлових даних, це т.зв. Unix стиль.
Ant як і Windows використовує цей підхід для реєстру, але для файлових даних використовує інший метод.
В ньому дерева томів показані кожен окремо, утворюючи ліс дерев.
Розрізняються ці дерева присвоєнням ідентифікатору
(напр. літери) кореневій директорії тому (диску), дивіться наступний абзац шодо специфіки Ant.
Це так званий DOS стиль репрезентації ФС даних і для файлових даних, він видається
зручнішим за монолітне дерево, бо ієрархія даних в цьому стилі показана ясніше й реальніше.
Для реєстру з іншого боку, єдине дерево видається нормальним варіантом. Хоча, варто
зазначити, шо можливість побудови реєстру як лісу потребує вивчення, цілком
можливо, шо цей варіант видасться і тут вигіднішим.
</p>
<p>
Планується відтворити внутрішній формат реєстру як в Windows, а там як вийде.
</p>

<p>
Ant, як вже сказано, використовує DOS стиль для показування ФС даних. Відмінністю від Windows є те, шо
ідентифікаторами суть не просто букви латинського алфавіту, а числа, закодовані як літерали цих чисел
в 36-аковій (тридцятишост<b>а</b>ковій), порядковій системі числення, побудованих на множині [0 - 9, A - Z].
Максимальна розрядність (довжина літералу в символах) планується 4. Такі рядки дають можливість уникнути
нестачі літер на системах з кількістю дисків, яка переважає кількість наявних літер, адже з 4-розрядними
числами, ми маємо ліміт в 36<sup>4</sup>, шо є 1679616 &mdash; більше, ніж достатньо, плюс завжди легко розширити
якшо не вистачить. Стара DOS схема є цілком сумісна з цією. Правильні ідентифікатори пробігають значення
від <tt>0</tt> до <tt>ZZZZ</tt> (1679615). Передні нулі й регістр літер не важить.
Приклад ФС шляхів з використанням правильних ідентифікаторів:
</p>
<div class="console accent">
0:\<br />
1:\some\directory<br />
C:\Ant\System\config\system<br />
Pics:\2008\vacation<br />
esp:\efi\Upptech\antload.efi<br />
Uefi:\efi\Upptech\antload.efi
</div>
<p>
Останні два до речі, вказують на той самий том, і використовують одні з небагатьох зарезервованих
системою ідентифікаторів. У цьому випадку, для системної партиції UEFI (ESP).
Традиційно, <i>Пусковий Том</i> (англ. <i>Boot Volume</i>), &mdash; домівка ОС, отримує літеру <tt>C</tt>.
</p>

<p>
Написана переважно мовою C з невеликою домішкою асемблерного коду. Перші цільові архітектури
суть x86 і arm. Були також наміри включити в цільовий список mips
і ppc, але обставини завадили цьому стати дійсністю. riscv також розглядалась
оскільки Одноплатні Компутери (ОПК) або навіть ПК-подоби з нею почали з'являтися (26.05.2021).
Але потім, в 2022 - 2023, все, крім x64 та arm64, було вилучено зі списку підтримки. Читайте
<a href="doc/uk/Targets.htm" target="_blank" class="undecorated">цю сторінку</a>
для детальнішої ретроспективи.
</p>

<p>
Основне середовище ППЗ (Платформне Програмне Забезпечення, мій термін для англ. Firmware, бо використовувати
неоковирну московську кальку з останнього "прошивка", я не можу) є Uefi. Можливі розглядані інші ППЗ
були стара Bios, Open Firmware, та, в "важких випадках", без-ППЗ-шне, голе середовище uboot, без
будь яких сервісів, виставлених для завантажувальника ОС.
Знову, читайте сторінку <a href="doc/uk/Targets.htm" target="_blank" class="undecorated">
Цільовий парк і середовище ППЗ</a>, шоб взнати детальніше за цілі і ППЗ середовища, шо було
залишено, шо закинуто і чого.
</p>

<p>
Також Ant має сильний акцент на підтримці кількох Підсистем Середовищ (ПС), тобто
&mdash; мання здатности ганяти програми, написані для різних виконавчих середовищ,
наборів API (стандартів). Основні суб'єкти суть WinAPI і Posix. Більше за це
на сторінці <a href="doc/uk/Goals.htm" target="_blank" class="undecorated">Цілі ANT</a>
бо це велика тема сама по собі. Коротко, основна ПС, <i>AntAPI</i>,
є WinAPI-подібною, наскільки подібною і повною, покаже час. Вона потрібна,
наприклад, для будь якої ГІК програми, бо саме ця ПС надає усю функціональність,
пов'язану з графічним інтерфейсом. Насправді, всі програми режиму користувача
залежатимуть від цієї ПС, явно чи неявно. Posix ПС забезпечуватиме можливість ганяти
програми, які очікують цей стандарт API. Такі програми на Ант будуть лише ІКР.
Насправді, Posix не покриває графічні інтерфейси і нема намірів портувати шось
графічне з Unix клонів.
</p>

<p>
Заплановано мати розвинену систему керування пакетами або Інсталяційний Майданчик.
Для уникнення жахливого безладу, який неминуче з'являється без організованого,
добре визначеного механізму керування міріадами програм і їхніх даних, які
користувач ставе на машину.
Також для боротьби з роздуванням, яке йде в парі з згаданою кашею і походить
від чисельного множення тих самих речей, які ставляться різними сторонами як
залежності знову й знову.<br />
Цей майданчик має бути потужним і дружнім до користувача одночасно. Шо,
звичайно, вказує, створення його &mdash; нелегке завдання. Обрисовуючи, користувачеві,
для ставлення чогось, треба взяти "пакет" того чогось, з довіреного джерела,
і пройти через його інсталяцію, використовуючи добревизначений набір утиліт,
чи то буде Інтерфейс Командного Рядка (ІКР) чи Графічний Інтерфейс Користувача (ГІК).
Програма, яка бажає бути встановленою, має підготувати встановчий пакет, у
визначений спосіб, вказуючи, чим вона є і від чого вона залежить.
Майданчик перевіре чи все добре з пакетом і зареєструє його в своїй базі даних.
Пакет має надавати користувачам зручну в користанні й зрозумілу інсталяційну
процедуру, можливість налаштовувати інсталяцію через опції, можливість ставити декілька
версій програми або вибір користувачів, для яких ця програма буде поставлена.
Це не має бути просто тупе
</p>
<div class="console accent">
C:\Users\User&gt;meaningless-name-with-dashes install Thing
</div>
<p>
Очевидно, ця тема просе свою власну сторінку (шо буде зроблено пізніше, коли цей майданчик буде
чимось явнішим, ніж туманна балаканина за нього).
</p>


</div>
</div><div class="uppchar"><a href="doc/uk/Introduction.htm#up" class="undecorated">☝</a></div>
 </body>
</html>
