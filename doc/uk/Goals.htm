<!DOCTYPE html>

<!-- 3:29 06.08.2020 -->

<html id="up">
	<head>
		<title>Наміри</title>
		<base href="../.." />
		<meta charset="utf-8">
		<meta	name="keywords"
				content="Upptech, ANT, efify, Операційна Система, osdev,
						Windows, Windows NT, UEFI, системне програмування,
						x86, ARM, MIPS, RISCV, ПК, одноплатний компутер"
		/>
		<meta	name="description"
				content="ANT, Операційна Система, натхненна лінійкою Microsoft Windows NT"
		/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta property="og:title" content="Avril Operating System"  />
		<meta property="og:image" content="https://ant-upptech.sourceforge.io/res/AvOgImg.jpg" />
		<link rel="shortcut icon" type="image/x-icon" href="res/EyeOfHor.jpg" />
		<link rel="icon" sizes="128x128" href="res/EyeOfHor.jpg">
		<link rel="stylesheet" href="css/IntroductionCommon.css" />
		<style type="text/css"></style>

	</head>
	<body class="bodyintro">
		<span class="navbar"><a href="doc/Goals.htm" class="navlink">English</a></span>
		<h1 class="h1intro">Наміри ANT</h1>
		<small>Date: 06.08.2020</small>
		<hr class="hrintro" />
		<div class="navbar">
			<a href="doc/uk/AntMain.htm" class="navlink">головна</a> \
			<a href="doc/uk/Book.htm" class="navlink">книжка</a> \
			<a href="doc/uk/Introduction.htm" class="navlink">знайомство</a> \
		</div>
		<hr class="hrintro" />

<div class="padded-page-text">
<h3>Підсистеми Середовища (ПС)</h3>
<p>
Я вже згадував за намір підтримувати в Ант кілька Підсистем Середовища, ПС.
ПС це програмний комплекс в складі системи, який дає їй уміння ганяти
програми, написані для конкретного середовища Програмного Інтерфейсу,
ПІ (англ. Application Programming Interface, API).
ПС імплементує середовище, яке ті програми очікують від системи.
Починаючи від надання самих множин функцій цього API і закінчуючи
створенням "вигляду" системи, який характерний для того середовища.
Наприклад, згадане єдине дерево ієрархії файлових даних в Unix клонах.
Це частина вигляду таких систем, і програми написані під Posix очікують
саме таку файлову організацію, а вона не збігається з рідною конвенцією
в Ант, того потрібні певні компоненти, які дбатимуть за "правильний"
вигляд для своєї ПС. Імплементаційно, ПС складатиметься з динамічних
бібліотек (DLL), шо міститимуть фукнції API або його класи,
якшо мова йде за об'єктно орієнтований ПІ.
Також ПС має в собі <i>процеси підтримки</i>, саме вони створюватимуть
згаданий "вигляд" і дбатимуть за його специфіку. Шо саме буде потрібно
для створення такого "вигляду" є, звичайно, специфічним для стандарту ПІ,
який ПС імплементовує. Іншими компонентами, якшо потрібно, можуть бути
модулі ядра, які додаватимуть або покращуватимуть функціональність, потрібну
середовищу або які допомагатимуть в створенні вигляду (середовища
мається на увазі, а не саботаж). Ідея ПС взята з NT, яка мала її
з самих початків.
</p>
<p>
Ант матиме завжди присутню, рідну ПС, <tt>AntAPI</tt>.
Вона планується бути дуже схожою на <tt>WinAPI</tt>. Наскільки,
&mdash; це предмет для подальших фаз розробляння. Деталізація
цього важливого параграфу цілком залежить від прогресу проєкту
й матеріал сюди буде доданий коли буде шо додавати.
</p>
<p>
На додачу до AntAPI, є намір написати ПС для Posix.
Навіть не дивлячись на те, шо я не фанат Posix-у, це було б цікаво.
Бо намір підтримувати кілька ПС є викликом &mdash; він складний
і значить викликає здоровий, творчій азарт. Але також, суть ще й практичні
позитивні результати від цього &mdash; ОС отримує більше шансів
мати свого користувача. Інакше кажучи, ця ідея має кілька плюсів,
серед яких практичні. Як чітачі могли взнати з читання за
<a href="doc/uk/Targets.htm" class="undecorated">цілі</a>,
серед них, і з самого початку, були недорогі армівські ОПК.
Вони популярні серед ентузіастів різного штибу, яких узагальнено називають
англійською tinkerers. Вони роблять різні речі з такими ОПК
&mdash; від використання їх як безвентиляторних міні ПК до
саморобних (DIY, Do It Yourself) мережних сховищ, медіяцентрів,
мікросерверів різноманітного призначення, всілякої робототехніки
або навіть наукових проєктів. Назараз лінукс є, власне, єдиною опцією
для них. Це означає, шо всі вони призвичаєні до Posix-них утиліт
і загалом &mdash; до того середовища.
Ось чого мання Posix-ної ПС, здатної ганяти знайомі для тієї авдиторії програми,
є важливим для успішности ОС. І, також, ці програми
доступні для портування в великій кількості.
Очевидно, шо створення функціональних аналогів з нуля, однією особою
чи маленькою спільнотою &mdash; нереалістично.
</p>

<h3>Ролі</h3>
<p>
Тобто Ант збирається покривати дещо різні ПК подібні
сегменти компутерів і шляхів їхнього використання &mdash;
звичайний настільний ПК, сервер, мікросервер і чисельні
підтипи мобільних формфакторів і сценаріїв. За це пізніше,
але тут зазначимо, шо таке покриття вимагає від системи
чітко визначити один аспект свого устрою: вона має бути
гнучкою в опціях, які залежать від типу сценарію використання.
Один такий &mdash; це його інтерактивність. "Інтерактивний" означає
такий, шо має на увазі наявність локального користувача як
людини, яка взаємодіятиме з компутером через його периферійні
пристрої Користувацької Взаємодії.
Інший &mdash; це форма взаємодії, якшо вона є. На прикладі щойно згаданих
армівський ОПК. Часто, все, шо користувачу треба для роботи підчас локальної
сесії на таких пристроях, це Інтерфейс Командного Рядка
(ІКР, англ. Command Line Interface, CLI), який надається Підсистемою
Консольної Взаємодії (ПКВ, англ. Console User Interface, CUI)
і яка споживає набагато менше ресурсів за повну підсистему Графічної Взаємодії
(ПГВ, англ. Graphical User Interface, GUI), шо може бути важливим для малоресурсного компутера.
Цей приклад показує, шо Ант має надавати можливість вибору
користувацького інтерфейсу і перемикання між ними. ПГВ містить ПКВ,
але ненавпаки, але попри всі ці непрості зв'язки, функція вибору
й перемикання між підсистемами має давати користувачеві робити це легко,
без зайвих ускладнень. 
Тож, ми маємо ще одну важливу концепцію &mdash; <i>селективність
користувацького інтерфейсу</i>.

Тонкощі вибору й перемикання між підсистемами користувацької взаємодії
будуть обговорені в відповідній главі з технічних деталей цього компоненту Ант.

Коротко, якшо користувач, під'єднавши до своєї машини монітор,
хоче заходити в систему лише в консольну сесію, то він має визначити 
"профіль", який казатиме системі надавати лише ІКР і використовувати
його для входу в таку сесію.

В підсумку, Ант має просто розрізняти такі підвиди сесій
і взаємодій з користувачем і має надавати ясний механізм
їхнього конфігурування.
</p>
<p>
Далі. Ми знаємо, шо настільний Графічний Інтерфейс, ГІ, і мобільний
(смартфоновий) ГІ суть дуже різними. Я не вірю в можливість ефективного
об'єднання таких разюче відмінних в своїй "фізиці" форматів інтерфейсу,
тож Ант розрізнятиме їх замість ліпити шось єдине. Поєднуючи
те, шо справді можна поєднати. Тож, ми маємо кілька типів пристроїв,
з точки зору користувацької взаємодії:
</p>
<dl>
	<dt>Настільник або ноутбук без сенсорного екрану</dt>
	<dd>
Найчастіша форма настільного компутера. Основний пристрій виведення це дисплей, введення &mdash; клавіатура
та миша, тракпад
	</dd>
	<dt>Настільник або ноутбук з сенсорним екраном</dt>
	<dd>
Шось новомодне, як наприклад нотбуки трансформери з потужністю звичайного ПК, але з сенсорним екраном.
Основне введення всеодно клавіатура, миша, але також сенсорний екран додає новогу в гру.
	</dd>
	<dt>Великий планшет, гібридний ПК, ультрабук. Сенсорний екран присутній обов'язково.</dt>
	<dd>
Споріднений з пунктом вище, але менш потужний, шось посередині між тими й мобільними планшетами.
Тут сенсорний екран може бути використаний частіше і вже може не бути "вторинним" пристроєм введення.
	</dd>
	<dt>Мобільний планшет, &lt;14&Prime; дисплей, сенсорний екран</dt>
	<dd>
Первинний пристрій введення тут сенсор і навіть якшо є приєднувана клавіатура, вона скоріше помічник.
	</dd>
	<dt>Мобільний телефон (Смартфон), &lt;7&Prime; дисплей з сенсором</dt>
	<dd>
Звичайний мобільний телефон. Насправді, дякуючи USB C, ця платформа стає набагато
складнішою в плані можливого типу взаємодії з користувачем, ніж просто "смартфон".
Бо тепер до нього можна приєднати USB C докстанцію, а через неї &mdash; клавіатуру,
мишу, жорсткий диск, HDMI (або Display Port) монітор і мережу! Шо перетворе його
в настільник. Настільник, шо поміщається в крихітному пласкому корпусі телефона.
Ця цікава можливість буде обговорена пізніше. Мобільний ГІ всеодно залишається
основним для платформи, бо все ж, це переважно мобільний пристрій.
Настільні інтерфейси (консольний та/або повний) можна буде інсталювати і використовувати
як вторинну підсистему. І це звучить круто як мета, проте, слід зазначити,
шо це не просте досягнення. Як з т.з. ПЗ так і апаратури.
Мається на увазі побоювання з приводу відсутности чіткого регулювання чи
ця конкретна машина здатна потягти аж так багато приєднаної ПК-шної периферії.
Фото поплавленого і просмаженого бездумними конфігураціями пайнфона кажуть,
шо треба дуже відповідально ставитися тут до керування енергоспоживанням
(а не так як в лінуксі).
	</dd>
	<dt>Пристрої з маленьким монітором без сенсору</dt>
	<dd>
Навігатори? Або ручні ретроігрові консолі, які ми згадували на сторінці
<a href="doc/uk/Targets.htm#handheldconsoles" class="undecorated">цільових платформ</a>.
Шодо останніх, то це не для початків, але, думається, шо всю специфіку
таких інтерфейсів треба спробувати забезпечити через визначення <i>оболонки</i><small><sup>1</sup></small>,
спеціальної для цього типу пристроїв, замість визначення цілої нової підсистеми
користувацької взаємодії з своїми API, інтерфейсними повідомленнями тощо.
	</dd>
</dl>
<small><sup>1</sup></small> &mdash; програма, зазвичай частина ОС, яка показує користувачу систему на екрані,
як наприклад <i>Explorer</i> в Windows, це <b>справжня</b> оболонка, а те,
шо юніксоїди називають оболонкою є командним інтерпретатором.

<p>
І ці типи пристроїв вимагають від Ант визначити набір підсистем взаємодії,
кожна з яких найкраще підходитиме для своєї підмножини цих типів пристроїв.
Навіть не намагаючись лізти на "чужу" землю. Користувачі можуть
відчути досвід жахливого інтерфейсу сучасних лінуксових смартфонів. Який
дає безтолково робити будь шо, але з неприємними результатами. Ті вікна,
які плавають як на настільній системі, але по манюсінькому дисплею смартфона,
і болісні фокуси, які користувачі мають вигадувати, шоб хоч шось зробити на такому
диво апараті.
</p>

<p>
В Ант є план мати 2 види ПГВ:
</p>
<ul>
	<li>
<i>Настільна</i> &mdash; знайома графічна система, яку будь хто бачив на своїх персональних компутерах.
Але яка також адаптуватиметься під обслуговування введення з сенсорного
екрану на нових пристроях (наприклад, використовуючи теми з більшими й пласкішими
елементами керування, контролами) та робитиме це просто й прозоро (наприклад, шоб настільні програми
думали, шо це звичайний настільник).
	</li>
	<li>
<i>Мобільна</i> &mdash; для малих планшетів і смартфонів.
Чесно, ще дуже багато невивченого тут. Єдине, шо можна
сказати зараз це те, шо це ПГВ переважно для мобільних телефонів, а також
для малих планшетів, де було б незручно розгортати настільну ПГВ навіть з
адаптаційними темами, де неможливо об'єднатися з настільним варіантом і де
треба мати це по іншому.
Тож, наприклад бравзер для цієї ПГВ і для настільної не будуть тим самим
не лише на вигляд чи поведінково, але й своїм внутрішнім устроєм і використовуваним
API, хоча це, звичайно, до певної міри, адже навіть так, має бути багато
спільного між обома. Це розрізнення, можливо, робитиме розробляння для цього
ПГВ складнішим, але воно даватиме йому шанс бути ефективним, а не гладким
пожирачем ресурсів. Дуже не хотілося, шоб веб оглядач зжирав 100МБ оперативної
пам'яти на пусту сторінку, хоча й ясно, шо для ентузіастської ОС не це є проблемою,
а відсутність портів тих веб оглядачів... Шо саме це будуть за відмінності
ще важко сказати, ще треба аналізувати, але вони додаватимуться лише за
необхідности і головним критерієм оцінки її буде ефективність програми.
Це інше фізично графічне середовище (все ж, розмір має значення)
і воно вимагає інших підходів в своїй роботі. Найочевиднішою відмінністю
від настільної ПГВ з його перекритими вікнами верхнього рівня, які плавають
по екрану, є та, шо мобільна ПГВ завжди дає поточній програмі увесь екран,
тож його вікно є повноекранним. Просто ніде плавати вікнам на екрані діагоналлю
коло 6-ти дюймів, неважливо якою божевільною буде густина пікселів. Тут не
розвиток технології, а людська фізіологія встановлюють межі. І, звичайно,
сенсорний екран тут основний пристрій введення, з тиканнями замість клацань.
	</li>
	<li>
Інші ПГВ спеціального призначення, шось, шо не покривається жодною з тих двох вгорі або вимагає
принаймні своєї оболонки. Це наприклад стосується згаданих ручних консолей.
Але за це ще рано шось балакати.
	</li>
</ul>
</div>

</div><div class="uppchar"><a href="doc/uk/Goals.htm#up" class="undecorated">☝</a></div>
	</body>
</html>